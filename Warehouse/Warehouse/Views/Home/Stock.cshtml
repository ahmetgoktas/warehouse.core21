
@{
    ViewData["Title"] = "Stock";
}

<div class="row">
    <div class="col-md-12">
        <div class="col-md-2"><h2>@ViewData["Title"]</h2></div>
        <div class="col-lg-10 text-right" style="padding-top: 26px;"><label>Plant : &nbsp;</label><input type="text" id="dpPlant" /></div>
    </div>
</div>
<div class="row" id="gridTemplate">
    <div id="grid"></div>
</div>
<div class="row hidden" id="formTemplate">

    <div class="form-group float-label-control">
        <label for="">Barcode</label>
        <input type="text" class="form-control" placeholder="Barcode" data-bind="value: barcode">
    </div>

    <div class="form-group float-label-control">
        <label for="">Quantity</label>
        <input type="number" class="form-control" placeholder="Quantity" data-bind="value: quantity">
    </div>

    <div class="form-group float-label-control">
        <label for="">Product</label>
        <input id="product" type="text" class="form-control k-select-full" placeholder="Product" data-bind="value: productId">
    </div>

    <div class="form-group float-label-control">
        <label for="">Plant</label>
        <input id="plant" type="text" class="form-control k-select-full" placeholder="Plant" data-bind="value: plantId">
    </div>

    <div class="form-group float-label-control">
        <label for="">Movement Type</label>
        <input id="movementType" type="text" class="form-control k-select-full" placeholder="Movement Type" data-bind="value: movementTypeId">
    </div>

    <div class="form-group float-label-control">
        <button class="btn btn-success" id="btnSave">Save</button>
        <button class="btn btn-danger" id="btnDelete" data-bind="visible: isVisible">Delete</button>
        <button class="btn btn-warning" id="btnCancel">Cancel</button>
    </div>
</div>

<script id="toolbarTemplate" type="text/x-kendo-template">
    <a class="k-button" href="\#" onclick="return toolbar_click()">Create</a>
</script>
<script>
    $(function () {

        let viewModel = kendo.observable({
            stockId: 0,
            barcode: '',
            quantity: 0,
            plantId: null,
            productId: null,
            movementTypeId: null,
            parentStockId: null,
            isVisible: function () {
                return this.stockId > 0;
            }
        });

        kendo.bind($('#formTemplate')[0], viewModel);

        toolbar_click = function () {
            $('#gridTemplate').hide();
            $('#formTemplate').removeClass('hidden').show();
            return false;
        };

        $('#btnCancel').click(function () {
            window.location.reload();
        });

        $('#btnDelete').click(function () {
            
            $.ajax({
                url: Api + 'Stock/Delete',
                type: 'DELETE',
                data: viewModel.toJSON(),
                success: function (res) {
                    showNotification({ message: 'Record deleted' }, 'success', function () { window.location.reload(); });
                },
                error: function (errorData) {
                    showError(errorData, errorData.status, errorData.errorThrown);
                }
            });
        });

        $('#btnSave').click(function () {
            if (!viewModel)
                return;
            
            let obj = viewModel.toJSON();

            let actionType = viewModel.stockId == 0 ? 'POST' : 'PUT';
            $.ajax({
                type: actionType,
                data: obj,
                url: Api + 'Stock/' + actionType,
                success: function (res) {
                    showNotification({ message: 'Record saved' }, 'success', function () { window.location.reload(); });
                },
                error: function (errorData, a, b, c) {
                    debugger;
                    showError(errorData, errorData.status, errorData.errorThrown);
                }
            });
        });

        let dpPlant = $('#dpPlant').kendoDropDownList({
            dataSource: {
                transport: {
                    read: {
                        url: Api + 'Plant/List',
                        dataType: "json"
                    }
                },
                serverPaging: false,
                sortable: true,
                pageSize: 10000,

                schema: {
                    data: function (response) {
                        return response.rows;
                    },
                    total: "total"
                }
            },
            optionLabel: { plantId: 0, name: 'Bir değer seçin' },
            //autoBind: true,
            dataValueField: 'plantId',
            dataTextField: 'name',
            change: function (e) {
                debugger;
                viewModel.set('plantId', dpPlant.dataItem().plantId);
                grid.dataSource.read();
            }
        }).data('kendoDropDownList');

        let grid = $('#grid').kendoGrid({
            dataSource: {
                transport: {
                    read: {
                        url: Api + 'Stock/List',
                        dataType: 'json', type: 'GET',
                        data: function () {
                            let id = dpPlant.dataItem().plantId;
                            return { plantId: id, filter: '' }
                        },
                    },
                },
                serverPaging: true,
                sortable: true,
                pageSize: 10,
                schema: {
                    data: "rows",
                    total: "total"
                }
            },
            toolbar: [
                { template: kendo.template($("#toolbarTemplate").html()) }
            ],
            dataBound: function (e) {
                e.sender.tbody.find('tr').dblclick(function (e) {
                    
                    let dataItem = grid.dataItem(this).toJSON();

                    for (var prop in dataItem) {
                        viewModel.set(prop, dataItem[prop]); // use the View-Model object after initialization
                    }
                    kendo.bind(document.body, viewModel);
                    $('#gridTemplate').hide();
                    $('#formTemplate').removeClass('hidden').show();
                });
            },
            height: 550,
            pageable: {
                pageSizes: [10, 20, 50, 100],
                buttonCount: 5,
                message: {
                    empty: 'No data'
                }
            },
            filterable: true,
            sortable: true,
            groupable: true,
            resizable: true,
            reorderable: true,
            navigatable: true,
            excel: {
                fileName: "export.xlsx",
                allPages: true,
                filterable: true
            },
            columns: [
                { field: 'stockId', title: 'Id', width: 75, hidden: true },
                { field: 'product.name', title: 'Product', width: 120, template: '# if (product != null) { # #=product.code# / #=product.name## } else {##}# ' },
                { field: 'plant.name', title: 'Plant', width: 120, template: '# if (plant != null) { ##=plant.name## } else {##}# '  },
                { field: 'movementType.name', title: 'Movement Type', width: 120, template: '# if (movementType != null) { ##=movementType.name## } else {##}# '  },
                { field: 'barcode', title: 'Barcode', width: 120 },
                { field: 'quantity', title: 'Quantity', width: 120 },
                { field: 'parentStock.barcode', title: 'Parent', width: 120, template: '# if (parentStock != null) { ##=parentStock.barcode## } else {##}# '  }
            ],
        }).data('kendoGrid');

        $('#plant').kendoDropDownList({
            dataSource: {
                transport: {
                    read: {
                        url: Api + 'plant/list',
                        dataType: "json"
                    }
                },
                schema: {
                    data: function (response) {
                        return response.rows;
                    },
                    total: "total"
                },
                pageSize: 10000
            },
            autoBind: true,
            optionLabel: { plantId: null, name: 'Bir değer seçin' },
            dataValueField: 'plantId',
            dataTextField: 'name',
            select: function (e) {
                let dataItem = e.dataItem.toJSON();
                viewModel.set('plantId', dataItem.plantId);
            }
        }).data('kendoDropDownList');

        $('#movementType').kendoDropDownList({
            dataSource: {
                transport: {
                    read: {
                        url: Api + 'movementType/list',
                        dataType: "json"
                    }
                },
                schema: {
                    data: function (response) {
                        return response.rows;
                    },
                    total: "total"
                },
                pageSize: 10000
            },
            autoBind: true,
            optionLabel: { movementTypeId: null, name: 'Bir değer seçin' },
            dataValueField: 'movementTypeId',
            dataTextField: 'name',
            select: function (e) {
                let dataItem = e.dataItem.toJSON();
                viewModel.set('movementTypeId', dataItem.movementTypeId);
            }
        }).data('kendoDropDownList');

        $('#product').kendoDropDownList({
            dataSource: {
                transport: {
                    read: {
                        url: Api + 'product/list',
                        dataType: "json"
                    }
                },
                schema: {
                    data: function (response) {
                        return response.rows;
                    },
                    total: "total"
                },
                pageSize: 10000
            },
            autoBind: true,
            optionLabel: { productId: null, name: 'Bir değer seçin' },
            dataValueField: 'productId',
            dataTextField: 'name',
            select: function (e) {
                let dataItem = e.dataItem.toJSON();
                viewModel.set('productId', dataItem.productId);
            }
        }).data('kendoDropDownList');
    });
</script>

